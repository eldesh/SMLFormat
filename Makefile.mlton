
MLTON                 := mlton
MLTON_FLAGS           += -default-ann "nonexhaustiveMatch ignore"

MLLEX                 := mllex
MLYACC                := mlyacc

SMLDOC                := smldoc
SMLDOC_ARGFILE        := formatlib/smldoc.cfg

PREFIX                := /usr/local/mlton
BINDIR                := $(PREFIX)/bin
LIBDIR                := $(PREFIX)/lib
DOCDIR                := $(PREFIX)/doc

MLB_PATH_MAP          := $(PREFIX)/mlb-path-map
ifneq ($(wildcard $(MLB_PATH_MAP)),)
MLTON_FLAGS           += -mlb-path-map $(MLB_PATH_MAP)
endif

SMLFORMAT             := bin/smlformat
SMLFORMAT_LIB         := bin/.smlformat-lib.dummy
SMLFORMAT_LIB_COMPAT  := bin/.smlformatlib.dummy

TEST_TARGET           := bin/formatlib-test

EXAMPLE_TARGET        := bin/FormatExpressionParser \
                         bin/MLParser \
                         bin/Overview

SMLFORMAT_MLB         := generator/mlton/smlformat.mlb

TEST_MLB              := formatlib/test/sources.mlb

EXAMPLE_MLB           := example/MLParser/sources.mlb \
                         example/FormatExpressionParser/sources.mlb \
                         example/Overview/sources.mlb

DEPENDS               := $(SMLFORMAT_MLB:.mlb=.mlb.d) \
                         smlformat-lib.mlb.d \
                         smlformatlib.mlb.d

TEST_DEPENDS          := $(TEST_MLB:.mlb=.mlb.d)

EXAMPLE_DEPENDS       := $(EXAMPLE_MLB:.mlb=.mlb.d)

SMLFORMAT_LIB_DIR     := $(shell readlink -f .)


all: smlformat


.PHONY: smlformat
smlformat: smlformat-nodoc doc


.PHONY: smlformat-nodoc
smlformat-nodoc: smlformat-bin smlformat-lib


.PHONY: smlformat-bin
smlformat-bin: $(SMLFORMAT)


.PHONY: smlformat-lib
smlformat-lib: $(SMLFORMAT_LIB) $(SMLFORMAT_LIB_COMPAT)


$(SMLFORMAT): $(SMLFORMAT_MLB:.mlb=)
	@echo "  [CP] $@"
	@cp $< $@


$(EXAMPLE_MLB:.mlb=): MLTON_FLAGS += -mlb-path-var "SMLFORMAT_LIB $(SMLFORMAT_LIB_DIR)"
$(SMLFORMAT_MLB:.mlb=) $(TEST_MLB:.mlb=) $(EXAMPLE_MLB:.mlb=): %: %.mlb
	@echo "  [MLTON] $@"
	@$(MLTON) $(MLTON_FLAGS) -output $@ $<


$(SMLFORMAT_LIB) $(SMLFORMAT_LIB_COMPAT): bin/.%.dummy: %.mlb
	@echo "  [MLTON] typecheck $<"
	@$(MLTON) $(MLTON_FLAGS) -stop tc $<
	@echo "typecheck dummy with: $(MLTON) $(MLTON_FLAGS) -stop tc $<" > $@


$(EXAMPLE_DEPENDS): MLTON_FLAGS += -mlb-path-var "SMLFORMAT_LIB $(SMLFORMAT_LIB_DIR)"
$(DEPENDS) $(TEST_DEPENDS) $(EXAMPLE_DEPENDS): %.mlb.d: %.mlb
	@echo "  [GEN] $@"
	@$(SHELL) -ec '$(MLTON) $(MLTON_FLAGS) -stop f $< \
		| sed -e "1i$(<:.mlb=) $@:\\\\" -e "s|.*|  & \\\\|" -e "\$$s| \\\\||" > $@; \
		[ -s $@ ]'


%.lex.sml: %.lex
	@echo "  [MLLEX] $<"
	@$(MLLEX) $<


%.grm.sml %.grm.sig %.grm.desc: %.grm
	@echo "  [MLYACC] $<"
	@$(MLYACC) $<


%.ppg.sml: %.ppg $(SMLFORMAT)
	@echo "  [SMLFORMAT] $<"
	@$(SMLFORMAT) $<


$(TEST_TARGET): $(TEST_MLB:.mlb=)
	@echo "  [CP] $@"
	@cp $< $@


.PHONY: test
test: $(TEST_TARGET)
	./$<


$(EXAMPLE_TARGET): bin/%: example/%/sources
	@echo "  [CP] $@"
	@cp $< $@


.PHONY: example
example: $(EXAMPLE_TARGET)


ifeq (,$(findstring clean,$(MAKECMDGOALS)))
  include $(DEPENDS)
endif


ifeq (test,$(findstring test,$(MAKECMDGOALS)))
  include $(TEST_DEPENDS)
endif


ifeq (example,$(findstring example,$(MAKECMDGOALS)))
  include $(EXAMPLE_DEPENDS)
endif


.PHONY: install-nodoc
install-nodoc: $(SMLFORMAT) $(SMLFORMAT_LIB) $(SMLFORMAT_LIB_COMPAT)
	@install -d $(LIBDIR)/SMLFormat
	@$(MLTON) $(MLTON_FLAGS) -stop f smlformat-lib.mlb | \
	while read file; do \
		if expr $$(readlink -f $$file) : ^$$(pwd) >/dev/null; then \
			cp --parents $$(realpath --relative-to=$$(pwd) $$file) $(LIBDIR)/SMLFormat; \
			echo -n . ; \
		fi; \
	done
	@install -D -m 0644 -t $(LIBDIR)/SMLFormat smlformat-lib.mlb
	@install -D -m 0644 -t $(LIBDIR)/SMLFormat smlformatlib.mlb
	@install -D -m 0755 -t $(BINDIR)           $(SMLFORMAT)
	@echo "Installation has been completed."
	@echo "Please add the entry to your mlb path map file:"
	@echo ""
	@echo "  SMLFORMAT_LIB $(LIBDIR)/SMLFormat"
	@echo ""


.PHONY: install
install: install-doc install-nodoc


.PHONY: doc
doc:
	@echo "  [SMLDoc]"
	@$(RM) -r doc/api
	@install -d doc/api
	@$(SMLDOC) -c UTF-8 -a $(SMLDOC_ARGFILE) -d doc/api


.PHONY: install-doc
install-doc: doc
	@install -d $(DOCDIR)
	@cp -prT doc $(DOCDIR)/smlformat-lib
	@echo "================================================================"
	@echo "Generated API Documents of SMLFormat"
	@echo "\t$(DOCDIR)/smlformat-lib"
	@echo "================================================================"


.PHONY: clean
clean:
	-$(RM) $(SMLFORMAT)
	-$(RM) $(SMLFORMAT_LIB)
	-$(RM) $(SMLFORMAT_LIB_COMPAT)
	-$(RM) $(SMLFORMAT_MLB:.mlb=)
	-$(RM) $(DEPENDS)
	-$(RM) $(TEST_TARGET)
	-$(RM) $(TEST_MLB:.mlb=)
	-$(RM) $(TEST_DEPENDS)
	-$(RM) $(EXAMPLE_TARGET)
	-$(RM) $(EXAMPLE_MLB:.mlb=)
	-$(RM) $(EXAMPLE_DEPENDS)
	-$(RM) -r doc/api
	-$(RM) generator/main/ml.lex.sml
	-$(RM) generator/main/ml.grm.sig
	-$(RM) generator/main/ml.grm.sml
	-$(RM) generator/main/ml.grm.desc
	-$(RM) example/MLParser/Absyn.ppg.sml
	-$(RM) example/MLParser/ml.grm.sig
	-$(RM) example/MLParser/ml.grm.sml
	-$(RM) example/MLParser/ml.grm.desc
	-$(RM) example/MLParser/ml.lex.sml
	-$(RM) example/FormatExpressionParser/Parser.grm.sig
	-$(RM) example/FormatExpressionParser/Parser.grm.sml
	-$(RM) example/FormatExpressionParser/Parser.grm.desc
	-$(RM) example/FormatExpressionParser/Lexer.lex.sml
	-$(RM) example/Overview/Types.ppg.sml
	-$(RM) example/Overview/Examples.ppg.sml

